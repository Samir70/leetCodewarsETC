/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var numSubarrayProductLessThanK = function (nums, k) {
  // since each of nums >= 1
  // if (k === 1) { return 0 }
  let [prod, left, right, count] = [1, 0, 0, 0]
  while (right < nums.length) {
    prod *= nums[right]
    while (prod >= k && left < right) {
      prod /= nums[left++]
    }
    if (prod < k) {
      count += right - left + 1
    }
    right++
  }
  return count
};

const tests = [
  { args: [[10, 5, 2, 6], 100,], out: 8 },
  { args: [[1, 2, 3], 0,], out: 0 },
  { args: [[333], 1], out: 0 },
  { args: [[640, 534, 20, 370, 242, 862, 846, 778, 528, 204, 502, 397, 741, 795, 674, 965, 452, 845, 244, 800], 1], out: 0 },
  { args: [[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 1000], out: 105 },
  { args: [[5, 2, 4, 5, 2, 5, 4, 3, 5, 2, 3, 4, 2, 4, 4, 5, 2, 2, 2, 5], 1], out: 0 },
  { args: [[9, 4, 8, 1, 5, 6, 3, 9, 1, 8, 2, 3, 7, 8, 9, 8, 4, 4, 5, 7, 5, 7, 10, 7, 9, 2, 1, 7, 4, 6, 6, 8, 9, 2, 2, 10, 6, 2, 6, 8], 1000000], out: 299 },
  { args: [[5, 2, 1, 2, 2, 6, 2, 7, 6, 5, 2, 4, 1, 2, 8, 2, 3, 9, 6, 9, 8, 5, 4, 8, 4, 4, 9, 10, 7, 9, 1, 4, 4, 2, 8, 8, 8, 2, 4, 2, 5, 1, 5, 2, 3, 2, 1, 3, 9, 6, 2, 1, 6, 2, 10, 4, 5, 3, 4, 5, 5, 10, 8, 5, 2, 8, 9, 6, 10, 8, 5, 5, 2, 7, 2, 6, 8, 2, 7, 10], 1000000], out: 712 },
  { args: [[895, 142, 300, 150, 302, 405, 537, 937, 938, 674, 635, 960, 929, 468, 105, 695, 182, 172, 413, 537, 156, 544, 683, 991, 359, 985, 613, 483, 838, 217, 755, 254, 857, 295, 343, 271, 154, 622, 625, 519, 853, 182, 860, 901, 412, 652, 767, 988, 525, 491, 132, 408, 689, 662, 142, 260, 217, 844, 487, 905, 283, 832, 363, 380, 734, 253, 373, 654, 606, 953, 589, 433, 544, 465, 843, 649, 226, 518, 401, 774, 895, 317, 418, 708, 435, 527, 114, 798, 478, 395, 751, 582, 973, 162, 387, 215, 543, 735, 131, 644, 415, 725, 867, 671, 529, 894, 800, 372, 607, 429, 355, 990, 783, 464, 465, 631, 756, 948, 760, 691], 1000000], out: 239 },
  { args: [Array(30000).fill(1), 2], out: 450015000 }
];

tests.forEach((t, i) => {
  let res = numSubarrayProductLessThanK(...t.args);
  if (res !== t.out) {
    console.log(
      'test', i, 'should be', t.out, ' got ', res
    )
  } else {
    console.log('test', i, 'was correct!')
  }
});