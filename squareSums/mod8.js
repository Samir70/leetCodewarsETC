const splitMod8 = (n) => {
    var res = {}
    for (var i = 1; i <= n; i++) {
        var t = i % 8;
        if (res[t] === undefined) {
            res[t] = [i]
        } else {
            res[t].push(i)
        }
    }
    return res
}

/*
mod8, squares are 0, 1, 4, 
0's, 2's 4's and 6's can pair up. 
with 67, you get 4 pairs that make 64
*/

// need them in this pattern suggested by path16
// 0,1,7,2,6,3,5,4,4,5,3,6,2,7,1,0
// [8, 1, 15, 10, 6, 3, 13, 12, 4, 5, 11, 14, 2, 7, 9, 16]
// path47 then continues
// [33, 31, 18, 46, 35, 29, 20, 44, 37, 27, 22, 42, 39, 25, 24]
// while the next two have 
// [48, 33, 31, 18, 46, 35, 29, 20, 44, 37, 27, 22, 42, 39, 25, 24]
console.log(splitMod8(67))

/*
{ '0': [ 8, 16, 24, 32, 40, 48, 56, 64 ],
  '1': [ 1, 9, 17, 25, 33, 41, 49, 57, 65 ],
  pair up to make 81

                              4
                              12
                       3, 61, 20
                      11, 53, 28
               2, 62, 19, 45, 36
              10, 54, 27, 37, 44
  ..  1,  63, 18, 46, 35, 29, 52
  .., 9,  55, 26, 38, 43, 21, 60
  64, 17, 47, 34, 30, 51, 13, 
  56, 25, 39, 42, 22, 59, 5 , 
  48, 33, 31, 50, 14, 67, 
  40, 41, 23, 58, 6 , 
  32, 49, 15, 66,  
  24, 57, 7 , 
  16, 65
  8, 
                       
                      
  ..  .., 
  .., .., 
  64, 17, 47, 34, 30, 51, 13, 12
  56, 25, 39, 42, 22, 59, 5 , 4
  48, 33, 31, 50, 14, 67, 
  40, 41, 23, 58, 6 ,  3, 61, 20
  32, 49, 15, 66, .., 11, 53, 28 
  24, 57, 7 ,  2, 62, 19, 45, 36
  16, 65, .., 10, 54, 27, 37, 44
  8,   1, 63, 18, 46, 35, 29, 52
  ..,  9, 55, 26, 38, 43, 21, 60
                      
 cycles 
 1, 15, 10, 6, 3  
 9, 7, 18, ?, 11

 18+? = m*m
 11+? = n*n
 (m+n)(m-n) = 7*1 => m=4  ?=-2
  ..,

Mod 4 
{ '0':
   [ 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64 ],
  '1':
   [ 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 61, 65 ],
  '2':
   [ 2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 66 ],
  '3':
   [ 3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63, 67 ] }



  */