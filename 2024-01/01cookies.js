/**
 * @param {number[]} g
 * @param {number[]} s
 * @return {number}
 */
var findContentChildren = function (g, s) {
  g.sort((a, b) => a - b);
  s.sort((a, b) => a - b);
  // console.log({g, s})
  let gi = 0, si = 0, count = 0;
  while (gi < g.length && si < s.length) {
    if (g[gi] <= s[si]) {
      count++;
      gi++;
      si++
    } else {
      si++
    }
  }
  return count
};

// rnd = []
// for (let i = 0; i < 100; i++) {
//   rnd.push(Math.floor(Math.random() * 1000) + 1)
// }

// console.log(rnd)

const tests = [
  { args: [[3, 2, 1], [1, 1]], out: 1 },
  { args: [[1, 2], [1, 2, 3]], out: 2 },
  {args: [
    [
      344, 777, 624, 201, 533, 598, 582,  52,  58, 357, 749, 302, 
       52,   2, 740, 375, 686, 998, 499, 248, 135, 576, 661, 299,
      566,  31, 549,  21, 574, 952, 607, 776, 950, 702, 951, 980,
      697, 858, 220, 371, 465, 500,  33, 345, 805, 730, 463, 189,
      440, 616,  59, 777, 450, 677, 128,  72, 982, 838, 921, 570,
      195, 243, 906, 896,  41, 613, 346, 883, 201, 807, 441, 783,
       61, 976,  44,  86, 365, 669, 334, 116,  34, 679, 129, 408,
      901, 281, 134, 305, 145, 281, 215, 901,  44, 833, 847, 485,
      721, 932, 949, 480
    ],
    [
      477, 936, 830, 895, 554, 801, 779, 242, 273, 617, 413, 888,
      227, 727, 591, 319, 849, 276, 335, 771,  88, 475, 612, 786,
      858, 595, 242, 271, 516, 324, 223, 663, 406, 867, 579, 814,
      925, 822, 165, 395, 449, 561, 529, 410, 628, 107, 680, 889,
      399, 233, 516, 400, 114, 653, 273, 430, 705, 335, 462, 162,
      493, 487, 256, 650,  38, 508, 257, 734, 284, 301,  40, 241,
      504, 887,  31, 761, 513,  92, 524, 979, 149, 443, 529, 398,
      748, 550, 727, 872, 401, 327, 939, 976, 880, 562, 261,  76,
      448, 407,  52, 950
    ]
  ], out: 92}
];

tests.forEach((t, i) => {
  let res = findContentChildren(...t.args);
  if (res !== t.out) {
    console.log(
      'test', i, 'should be', t.out, ' got ', res
    )
  } else {
    console.log('test', i, 'was correct!')
  }
});